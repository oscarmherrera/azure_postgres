{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "pgClusterNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "prefix to be given to this cluster of pg servers"
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique name of the new storage account that will be created to store virtual machine VHDs"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Domain name of the public jumpbox"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Virtual machine administrator username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Virtual machine administrator password"
      }
    },
    "tshirtSize": {
      "type": "string",
      "defaultValue": "Small",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "XLarge"
      ],
      "metadata": {
        "description": "T-shirt size of the PostgreSQL deployment"
      }
    }
  },
  "variables": {
    "sourceBranch": "master",
    "templateBaseUrl": "[concat('https://raw.githubusercontent.com/oscarmherrera/azure_postgres/',variables('sourceBranch'),'/')]",
    "sharedTemplateUrl": "[concat(variables('templateBaseUrl'), 'shared-resources.json')]",
    "tshirtSizeSmall": {
      "vmSize": "Standard_A1",
      "diskSize": 1023,
      "vmTemplate": "[concat(variables('templateBaseUrl'), 'database-2disk-resources.json')]",
      "vmCount": 2,
      "slaveCount": 1,
      "storage": {
        "name": "[parameters('storageAccountNamePrefix')]",
        "count": 1,
        "pool": "db",
        "map": [
          0,
          0
        ],
        "jumpbox": 0
      }
    },
    "tshirtSizeMedium": {
      "vmSize": "Standard_A3",
      "diskSize": 1023,
      "vmTemplate": "[concat(variables('templateBaseUrl'), 'database-8disk-resources.json')]",
      "vmCount": 2,
      "slaveCount": 1,
      "storage": {
        "name": "[parameters('storageAccountNamePrefix')]",
        "count": 2,
        "pool": "db",
        "map": [
          0,
          1
        ],
        "jumpbox": 0
      }
    },
    "tshirtSizeLarge": {
      "vmSize": "Standard_A4",
      "diskSize": 1023,
      "vmTemplate": "[concat(variables('templateBaseUrl'), 'database-16disk-resources.json')]",
      "vmCount": 3,
      "slaveCount": 2,
      "storage": {
        "name": "[parameters('storageAccountNamePrefix')]",
        "count": 2,
        "pool": "db",
        "map": [
          0,
          1,
          1
        ],
        "jumpbox": 0
      }
    },
    "tshirtSizeXLarge": {
      "vmSize": "Standard_A4",
      "diskSize": 1023,
      "vmTemplate": "[concat(variables('templateBaseUrl'), 'database-16disk-resources.json')]",
      "vmCount": 4,
      "slaveCount": 3,
      "storage": {
        "name": "[parameters('storageAccountNamePrefix')]",
        "count": 2,
        "pool": "db",
        "map": [
          0,
          0,
          1,
          1
        ],
        "jumpbox": 0
      }
    },
    "Token": "[guid(subscription().subscriptionId)]",
    "uniqueToken": "[uniqueString( resourceGroup().id, variables('Token'))]",
    "pgClusterName": "[concat(parameters('pgClusterNamePrefix'),'_',Substring(variables('uniqueToken'),0,8) )]",
    "tshirtSize": "[variables(concat('tshirtSize', parameters('tshirtSize')))]",
    "HATemplateDisabled": "empty-resources.json",    
    "jumpboxTemplateEnabled": "jumpbox-resources.json",
    "jumpboxTemplateDisabled": "empty-resources.json",
    "jumpboxTemplateUrl": "[concat(variables('templateBaseUrl'), variables(concat('jumpboxTemplate',parameters('jumpbox'))))]",
    "HATemplateUrl": "[concat(variables('templateBaseUrl'), variables(concat('HATemplate',parameters('haConfigured'))))]",
    "osSettings": {
      "scripts": [
        "[concat(variables('templateBaseUrl'), 'install_postgresql.sh')]",
        "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/shared_scripts/ubuntu/vm-disk-utils-0.1.sh"
      ],
      "imageReference": {
        "publisher": "credativ",
        "offer": "Debian",
        "sku": "8",
        "version": "latest"
      }
    },
    "networkSettings": {
      "vnetName": "[parameters('virtualNetworkName')]",
      "addressPrefix": "10.10.5.0/22",
      "subnets": {
        "dmz": {
          "name": "dmz",
          "prefix": "10.10.4.0/24",
          "vnet": "[parameters('virtualNetworkName')]"
        },
        "data": {
          "name": "data",
          "prefix": "10.10.6.0/24",
          "vnet": "[parameters('virtualNetworkName')]"
        }
      }
    },
    "availabilitySetSettings": {
      "name": "pgsqlAvailabilitySet",
      "fdCount": 3,
      "udCount": 5
    }
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "networkSetup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri":"https://raw.githubusercontent.com/oscarmherrera/azure_postgres/master/network/network-setupjson",
            "contentVersion":"1.0.0.0"
         },
         "parameters": {
            "adminUsername":{"value": "[parameters('adminUsername')]"},
            "adminPassword":{"value": "[parameters('adminPassword')]"}
          }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "etcd",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'networkSetup')]"
      ],
      "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri":"https://raw.githubusercontent.com/oscarmherrera/azure_postgres/master/etcd/etcd-deploy.json",
            "contentVersion":"1.0.0.0"
         },
         "parameters": {
            "adminUsername":{"value": "[parameters('adminUsername')]"},
            "adminPassword":{"value": "[parameters('adminPassword')]"}
          }
      }
    }
  ],
  "outputs": {}
}